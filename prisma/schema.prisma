// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Minimal License table for proper data normalization
model License {
  licenseKey String @id @map("license_key")
  customerId String? @map("customer_id") // Nullable for migration safety - can be populated later

  createdAt DateTime @default(now()) @map("created_at")
  devices   Device[]

  @@map("licenses")
}

// Device model - each device can have a trial and/or be linked to a license
model Device {
  deviceHash String @id @unique @map("device_hash")

  // Each device has its own unique activation ID from Polar
  activationId String? @map("activation_id")

  // KEPT FOR BACKWARD COMPATIBILITY - will be migrated to License table
  customerId String? @map("customer_id")

  // Reference to License (null = no license, using trial or inactive)
  licenseKey String? @map("license_key")
  license    License? @relation(fields: [licenseKey], references: [licenseKey], onDelete: SetNull)

  // Trial fields (null = no trial)
  trialStartedAt DateTime? @default(now()) @map("trial_started_at")
  trialExpiresAt DateTime? @map("trial_expires_at")

  // Device info for debugging and analytics
  osType     String? @map("os_type") // "windows", "macos", "linux"
  osVersion  String? @map("os_version") // "10.0.19045", "14.2.1", etc
  appVersion String? @map("app_version")

  // Timestamps
  createdAt   DateTime @default(now()) @map("created_at")
  lastChecked DateTime @default(now()) @map("last_checked") // For offline grace period

  activities ActivityLog[]

  @@index([licenseKey]) // Index for performance
  @@map("devices")
}

// Activity logging for debugging and analytics
model ActivityLog {
  id         String   @id @default(cuid())
  timestamp  DateTime @default(now())
  deviceHash String   @map("device_hash")
  action     String // 'trial_start', 'activate', 'deactivate', 'validate', 'order_refunded'
  metadata   Json? // Additional data like license key, error messages, etc

  device Device? @relation(fields: [deviceHash], references: [deviceHash])

  @@index([deviceHash, timestamp])
  @@map("activity_logs")
}
